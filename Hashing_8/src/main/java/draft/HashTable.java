package draft;

public class HashTable
{
    public int size; // Размер таблицы. Лучше простое число (делится только на 1 и само себя). Напр. 17 или 19
    public int step; // Длина шага, кол-во слотов для поиска след. свободного слота. Например, 3.
    public String [] slots; // Массив для хранения элементов таблицы. Можно сразу сделать его фиксированным.

    public HashTable(int sz, int stp) // Конструктор нашего класса
    {
        size = sz; // Передаем в создаваемый объект размер таблицы
        step = stp; // Задаем шаг, который будем использовать для проходки по таблице
        slots = new String[size]; // Создаем массив для хранения данных
        for(int i=0; i<size; i++) slots[i] = null; // "Зануляем" все элементы массива
    }

    public int hashFun(String value)
    {
        // всегда возвращает корректный индекс слота
        return 0;
    }

    public int seekSlot(String value)
    {
        // находит индекс пустого слота для значения, или -1
        return -1;
    }

    public int put(String value)
    {
        // записываем значение по хэш-функции

        // возвращается индекс слота или -1
        // если из-за коллизий элемент не удаётся разместить
        return -1;
    }

    public int find(String value)
    {
        // находит индекс слота со значением, или -1
        return -1;
    }
}
